

《Effective Java》10/90条建议

  《Effective Java》一书的核心写作目的就一个：如何写出更好（看）的Java代码。
   它可以帮助我们去构建更加健壮的Java代码，减少我们在写程序中有可能遇到的一些潜在的bug，或者说让我们在写程序的时
候更加注重OOP思想，增加程序的灵活性、复用性、可扩展性。在写一个应用程序时，将这本书提出的建议运用到编码过程中可能
不会立即看到代码的优越性，但是在未来对应用进行维护和产品迭代时就会发现代码的健壮性会为我们节省很多的时间与精力。

  在各式各样的Java新技术迅速衍生的同时，我们也需要更加关注Java代码的可读性、健壮性和扩展性。追求新技术的同时，也
要追求写具有美感的Java代码。（追求Java新技术 < 追求Java稳定性）

（第1个建议）：考虑使用静态工厂方法替代构造方法
（第2个建议）：当构造方法参数过多时建议用构造器模式
（第6个建议）：避免创建不必要的对象
（第9个建议）：使用try-with-resources 语句替代try-finally 语句
（第11个建议）：重写equals 方法时同时也要重写hashcode 方法
（第27个建议）：消除非受检的警告
（第42个建议）：for-each 循环优先于传统的for 循环
（第53个建议）：慎用可变参数
（第42个建议）：Lambda优先于匿名类
（第43个建议）：方法引用优先于Lambda